<?php

namespace Drupal\weather_data\Service\Test;

final class AlertsToHourlyPeriodsTest extends Base
{
    public $periods = [
        [
            "startTime" => "2024-02-26T11:00:00-07:00",
            "endTime" => "2024-02-26T12:00:00-07:00",
        ],
        [
            "startTime" => "2024-02-26T12:00:00-07:00",
            "endTime" => "2024-02-26T13:00:00-07:00",
        ],
        [
            "startTime" => "2024-02-26T13:00:00-07:00",
            "endTime" => "2024-02-26T14:00:00-07:00",
        ],
        [
            "startTime" => "2024-02-26T14:00:00-07:00",
            "endTime" => "2024-02-26T15:00:00-07:00",
        ],
        [
            "startTime" => "2024-02-26T15:00:00-07:00",
            "endTime" => "2024-02-26T16:00:00-07:00",
        ],
    ];

    /**
     * Test that 3 alerts that start and end
     * at actual period times are correctly
     * aligned
     */
    public function testPerfectlyAligned()
    {
        $alerts = [
            (object) [
                "onset" => "2024-02-26T11:00:00-07:00",
                "ends" => "2024-02-26T13:00:00-07:00",
            ],
            (object) [
                "onset" => "2024-02-26T14:00:00-07:00",
                "ends" => "2024-02-26T15:00:00-07:00",
            ],
            (object) [
                "onset" => "2024-02-26T15:00:00-07:00",
                "ends" => "2024-02-26T16:00:00-07:00",
            ],
        ];

        $expected = [
            [
                "periodIndex" => 0,
                "duration" => 2,
                "alert" => $alerts[0],
            ],
            [
                "periodIndex" => 3,
                "duration" => 1,
                "alert" => $alerts[1],
            ],
            [
                "periodIndex" => 4,
                "duration" => 1,
                "alert" => $alerts[2],
            ],
        ];

        $actual = $this->weatherData->alertsToHourlyPeriods(
            $alerts,
            self::periods,
        );

        $this->assertEquals($expected, $actual);
    }
}
