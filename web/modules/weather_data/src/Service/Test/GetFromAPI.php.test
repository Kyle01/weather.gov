<?php

namespace Drupal\weather_data\Service\Test;

use GuzzleHttp\Psr7\Response;

/**
 * Tests for the WeatherDataService getCurrentConditions method.
 */
final class GetFromApiTest extends Base
{
    /**
     * Tests that the method fetches and parses whatever the API returns.
     */
    public function testGetsApiData(): void
    {
        $expected = (object) ["response" => "here"];
        $this->httpClientMock->append(
            new Response(
                200,
                ["Content-type" => "application/json"],
                '{"response":"here"}',
            ),
        );

        $actual = $this->weatherDataService->getFromWeatherAPI("/my url");

        $this->assertEquals($expected, $actual);
    }

    /**
     * Tests that the method caches results.
     */
    public function testCachesApiData(): void
    {
        $expected = "cached value";
        $this->cacheMock
            ->method("get")
            ->willReturn((object) ["data" => $expected]);

        // Mock an API response. This should not be called.
        $this->httpClientMock->append(
            new Response(
                200,
                ["Content-type" => "application/json"],
                '{"response":"here"}',
            ),
        );

        $actual = $this->weatherDataService->getFromWeatherAPI("/my url");

        $this->assertEquals($expected, $actual);
    }
}
