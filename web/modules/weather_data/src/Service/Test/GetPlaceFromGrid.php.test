<?php

namespace Drupal\weather_data\Service\Test;

use GuzzleHttp\Psr7\Response;

/**
 * Test getting place information from the grid.
 */
final class GetPlaceFromGridTest extends Base
{
    /**
     * Utility to quickly setup the happy path routes for this method.
     */
    private function setupHappyPathRoutes()
    {
        $this->httpClientMock->append(
            new Response(
                200,
                ["Content-type" => "application/geo+json"],
                '{"geometry":{"coordinates":[[[4,3],[5,9],[3,9]]]}}',
            ),
        );

        $this->httpClientMock->append(
            new Response(
                200,
                ["Content-type" => "application/geo+json"],
                '{"properties":{"relativeLocation":{"properties":{"city":"City","state":"Not City, but State"}}}}',
            ),
        );
    }
    /**
     * Tests the happy path.
     */
    public function testHappyPath(): void
    {
        $expected = (object) [
            "city" => "City",
            "state" => "Not City, but State",
        ];

        $this->setupHappyPathRoutes();

        $actual = $this->weatherDataService->getPlaceFromGrid("wfo", 1, 2);

        $this->assertEquals($expected, $actual);
    }

    /**
     * If the place is cached, we should use it.
     */
    public function testsUsesCacheIfAvailable(): void
    {
        $expected = "yay it worked";

        $this->setupHappyPathRoutes();

        $this->cacheMock
            ->method("get")
            ->willReturn((object) ["data" => $expected]);

        $actual = $this->weatherDataService->getPlaceFromGrid("wfo", 1, 2);

        $this->assertEquals($expected, $actual);
    }
}
